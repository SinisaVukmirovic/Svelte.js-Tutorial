{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\pages\\Home.svelte",
    "..\\src\\components\\Postform.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import { onMount } from 'svelte';\r\n\r\n    import Postform from '../components/Postform.svelte';\r\n\r\n    let postLimit = 6;\r\n\r\n    const apiBaseUrl = 'https://ndb99xkpdk.execute-api.eu-west-2.amazonaws.com/dev';\r\n\r\n    let posts = [];\r\n\r\n    let editingPost = {\r\n        body: '',\r\n        title: '',\r\n        id: null\r\n    }\r\n\r\n    onMount(async () => {\r\n        const res = await fetch(apiBaseUrl + '/posts');\r\n        posts = await res.json();\r\n    });\r\n\r\n    function addPost({ detail: post }) {\r\n        if (posts.find(p => p.id === post.id)) {\r\n            const index = posts.findIndex(p => p.id === post.id);\r\n\r\n            let postsUpdated = posts;\r\n            postsUpdated.splice(index, 1, post);\r\n            posts = postsUpdated;\r\n        }\r\n        else {\r\n            posts = [post, ...posts];\r\n        }\r\n\r\n        editingPost = {\r\n            body: '',\r\n            title: '',\r\n            id: null\r\n        }\r\n    }\r\n\r\n    function editPost(post) {\r\n        editingPost = post;\r\n    }\r\n    function deletePost(id) {\r\n        fetch(`${apiBaseUrl}/post/${id}`, {\r\n            method: 'DELETE'\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(() => {\r\n            posts = posts.filter(post => post.id !== id);\r\n        });\r\n    }\r\n\r\n    function setLimit() {\r\n        fetch(`${apiBaseUrl}/posts/${postLimit}`)\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(postsData => {\r\n                posts = postsData;\r\n            });\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .delete-btn {\r\n        color: red !important;\r\n    }\r\n    .card .card-title {\r\n        margin-bottom: 0;\r\n    }\r\n    .card .time-stamp {\r\n        margin-bottom: 10px;\r\n        color: #999;\r\n    }\r\n</style>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col s6\">\r\n        <Postform on:postCreated={addPost} {editingPost} />\r\n    </div>\r\n    <div class=\"col s3\" style=\"margin: 50px\">\r\n        <p>Limit number or posts</p>\r\n        <input type=\"number\" bind:value={postLimit} />\r\n        <button on:click={setLimit} class=\"waves-effect waves-light btn\">Set</button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    {#if posts.length === 0}\r\n        <h3>Loading posts...</h3>\r\n    {:else}\r\n        {#each posts as post}\r\n            <div class=\"col s6\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-content\">\r\n                        <p class=\"card-title\">{post.title}</p>\r\n                        <p class=\"time-stamp\">{post.createdAt}</p>\r\n                        <p>{post.body}</p>\r\n                    </div>\r\n                    <div class=\"card-action\">\r\n                        <a href=\"#\" on:click={() => editPost(post)}>Edit</a>\r\n                        <a href=\"#\" on:click={() => deletePost(post.id)} class=\"delete-btn\">Delete</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        {/each}\r\n    {/if}\r\n</div>",
    "<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    export let editingPost;\r\n\r\n    const dispatch = createEventDispatcher();\r\n    \r\n    $: title = editingPost.title;\r\n    $: body =  editingPost.body;\r\n    let loading = false;\r\n\r\n    const apiBaseUrl = 'https://ndb99xkpdk.execute-api.eu-west-2.amazonaws.com/dev';\r\n\r\n    async function onSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (title.trim() === '' || body.trim() === '') {\r\n            return;\r\n        }\r\n\r\n        loading = true;\r\n\r\n        const newPost = { title, body };\r\n\r\n        let url, method;\r\n\r\n        if (editingPost.id) {\r\n            url = `${apiBaseUrl}/post/${editingPost.id}`;\r\n            method = 'PUT';\r\n        }\r\n        else {\r\n            url = `${apiBaseUrl}/post`;\r\n            method = 'POST';\r\n        }\r\n\r\n        const res = await fetch(url, {\r\n            method,\r\n            body: JSON.stringify(newPost)\r\n        });\r\n\r\n        const post = await res.json();\r\n\r\n        dispatch('postCreated', post);\r\n\r\n        title = body = '';\r\n\r\n        loading = false;\r\n    }\r\n</script>\r\n\r\n<style>\r\n    form {\r\n        margin: 50px;\r\n    }\r\n    .progress {\r\n        margin: 100px 0;\r\n    }\r\n</style>\r\n\r\n\r\n{#if !loading}\r\n    <form on:submit={onSubmit}>\r\n        <div class=\"input-field\">\r\n            <label for=\"title\">Title</label>\r\n            <input type=\"text\" bind:value={editingPost.title}>\r\n        </div>\r\n        <div class=\"input-field\">\r\n            <label for=\"body\">Body</label>\r\n            <input type=\"text\" bind:value={editingPost.body}>\r\n        </div>\r\n        <button type=\"submit\" class=\"wave-effect waves-light btn\">\r\n            {editingPost.id ? \"Update\" : \"Add\"}\r\n        </button>\r\n    </form>\r\n{:else}\r\n    <div class=\"progress\">\r\n        <div class=\"indeterminate\"></div>\r\n    </div>\r\n{/if}"
  ],
  "names": [],
  "mappings": "AAkEI,WAAW,cAAC,CAAC,AACT,KAAK,CAAE,GAAG,CAAC,UAAU,AACzB,CAAC,AACD,mBAAK,CAAC,WAAW,cAAC,CAAC,AACf,aAAa,CAAE,CAAC,AACpB,CAAC,AACD,mBAAK,CAAC,WAAW,cAAC,CAAC,AACf,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,IAAI,AACf,CAAC;ACxBD,IAAI,eAAC,CAAC,AACF,MAAM,CAAE,IAAI,AAChB,CAAC,AACD,SAAS,eAAC,CAAC,AACP,MAAM,CAAE,KAAK,CAAC,CAAC,AACnB,CAAC"
}